<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.edu.mapper.EduCourseMapper">
    
    <resultMap type="EduCourse" id="EduCourseResult">
        <result property="courseId"    column="course_id"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="courseName"    column="course_name"    />
        <result property="level"    column="level"    />
        <result property="courseType"    column="course_type"    />
        <result property="issueTime"    column="issue_time"    />
        <result property="externalAmount"    column="external_amount"    />
        <result property="internalAmount"    column="internal_amount"    />
        <association property="teacher"    javaType="Teacher"    resultMap="TeacherResult"   />
    </resultMap>

    <resultMap id="TeacherResult" type="Teacher">
        <id     property="teacherId"       column="teacher_id"     />
        <result property="teacherName"     column="teacher_name"   />
        <result property="teacherCode"     column="teacher_code"   />
        <result property="teacherCode"     column="dept_id"   />
    </resultMap>

    <sql id="selectEduCourseVo">
        select c.course_id, c.teacher_id, c.course_name, c.level, c.course_type, c.issue_time, c.external_amount, c.internal_amount,
               t.teacher_name,t.teacher_code,t.dept_id
        from edu_course c
            left join edu_teacher t on c.teacher_id = t.teacher_id
    </sql>

    <select id="selectEduCourseList" parameterType="EduCourse" resultMap="EduCourseResult">
        <include refid="selectEduCourseVo"/>
        <where>  
            <if test="teacherId != null "> and c.teacher_id = #{teacherId}</if>
            <if test="courseName != null  and courseName != ''"> and c.course_name like concat('%', #{courseName}, '%')</if>
            <if test="level != null  and level != ''"> and c.level = #{level}</if>
            <if test="courseType != null  and courseType != ''"> and c.course_type = #{courseType}</if>
            <if test="issueTime != null "> and c.issue_time = #{issueTime}</if>
            <if test="externalAmount != null "> and c.external_amount = #{externalAmount}</if>
            <if test="internalAmount != null "> and c.internal_amount = #{internalAmount}</if>
        </where>
    </select>
    
    <select id="selectEduCourseByCourseId" parameterType="Long" resultMap="EduCourseResult">
        <include refid="selectEduCourseVo"/>
        where course_id = #{courseId}
    </select>
        
    <insert id="insertEduCourse" parameterType="EduCourse" useGeneratedKeys="true" keyProperty="courseId">
        insert into edu_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">teacher_id,</if>
            <if test="courseName != null">course_name,</if>
            <if test="level != null">level,</if>
            <if test="courseType != null">course_type,</if>
            <if test="issueTime != null">issue_time,</if>
            <if test="externalAmount != null">external_amount,</if>
            <if test="internalAmount != null">internal_amount,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">#{teacherId},</if>
            <if test="courseName != null">#{courseName},</if>
            <if test="level != null">#{level},</if>
            <if test="courseType != null">#{courseType},</if>
            <if test="issueTime != null">#{issueTime},</if>
            <if test="externalAmount != null">#{externalAmount},</if>
            <if test="internalAmount != null">#{internalAmount},</if>
         </trim>
    </insert>

    <update id="updateEduCourse" parameterType="EduCourse">
        update edu_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="courseName != null">course_name = #{courseName},</if>
            <if test="level != null">level = #{level},</if>
            <if test="courseType != null">course_type = #{courseType},</if>
            <if test="issueTime != null">issue_time = #{issueTime},</if>
            <if test="externalAmount != null">external_amount = #{externalAmount},</if>
            <if test="internalAmount != null">internal_amount = #{internalAmount},</if>
        </trim>
        where course_id = #{courseId}
    </update>

    <delete id="deleteEduCourseByCourseId" parameterType="Long">
        delete from edu_course where course_id = #{courseId}
    </delete>

    <delete id="deleteEduCourseByCourseIds" parameterType="String">
        delete from edu_course where course_id in 
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>
</mapper>